create table users
(
    id            int auto_increment
        primary key,
    first_name    varchar(50)  not null,
    last_name     varchar(50)  not null,
    email         varchar(50)  not null,
    date_of_birth date         null,
    password      varchar(255) not null,
    isactive      tinyint(1)   null
);
create table roles
(
    id   int auto_increment
        primary key,
    name varchar(50) not null
);
create table role_user
(
    role_id int null,
    user_id int null,
    constraint role_user_ibfk_1
        foreign key (role_id) references roles (id),
    constraint role_user_ibfk_2
        foreign key (user_id) references users (id)
);

create index role_id
    on role_user (role_id);

create index user_id
    on role_user (user_id);
 create table images
 (
     id         int auto_increment
         primary key,
     product_id int          null,
     url        varchar(250) null,
     constraint images_ibfk_1
         foreign key (product_id) references products (id)
 );

 create index product_id
     on images (product_id);
     create table units
     (
         id   int auto_increment
             primary key,
         name varchar(255) null
     );
create table ingredients
(
    id             int auto_increment
        primary key,
    name           varchar(100) not null,
    unit_id        int          null,
    warning_limits double       not null,
    isactive       tinyint(1)   null,
    quantity       double       null,
    constraint fk_unit_ingrdients
        foreign key (unit_id) references units (id)
);
create table recipes
(
    id   int auto_increment
        primary key,
    name varchar(100) not null
);
create table recipe_details
(
    recipe_id     int    not null,
    ingredient_id int    not null,
    quantity      double not null,
    primary key (recipe_id, ingredient_id),
    constraint recipe_details_ibfk_1
        foreign key (recipe_id) references recipes (id)
            on delete cascade
);
create table daily_productions
(
    id              int auto_increment
        primary key,
    production_date datetime not null
);
create table areas
(
    id          bigint auto_increment
        primary key,
    description varchar(255) null,
    name        varchar(100) not null
);
create table tables
(
    id          bigint auto_increment
        primary key,
    active      bit          not null,
    name        varchar(255) not null,
    qr_code_url varchar(255) not null,
    area_id     bigint       not null,
    constraint FKm6nau5hjchyiilv3pdjbtgrte
        foreign key (area_id) references areas (id)
);

create table categories
(
    id        int auto_increment
        primary key,
    name      varchar(50)  not null,
    image_url varchar(250) not null,
    isactive  tinyint(1)   null
);

create table products
(
    id                      int auto_increment
        primary key,
    category_id             int           null,
    name                    varchar(250)  not null,
    current_price           double        null,
    description             varchar(250)  not null,
    status                  tinyint(1)    null,
    weight                  double        null,
    length                  double        null,
    width                   double        null,
    height                  double        null,
    discount_limit          double        null,
    recipe_id               int           not null,
    shelf_life_days         int default 1 not null,
    shelf_life_days_warning int default 0 null,
    constraint products_ibfk_1
        foreign key (category_id) references categories (id)
);

create index category_id
    on products (category_id);

create table product_batches
(
    id                  int auto_increment
        primary key,
    product_id          int                                                                    null,
    daily_production_id int                                                                    null,
    expiration_date     datetime                                                               null,
    quantity            int                                                   default 0        null,
    status              enum ('ACTIVE', 'NEAR_EXPIRY', 'EXPIRED', 'DISPOSED') default 'ACTIVE' not null,
    daily_discount      int                                                   default 0        null,
    constraint product_batches_ibfk_1
        foreign key (product_id) references products (id),
    constraint product_batches_ibfk_2
        foreign key (daily_production_id) references daily_productions (id)
);

create index daily_production_id
    on product_batches (daily_production_id);

create index product_id
    on product_batches (product_id);


create table bills
(
    id             bigint auto_increment
        primary key,
    created_at     datetime(6)                                      not null,
    customer_name  varchar(100)                                     null,
    customer_phone varchar(20)                                      null,
    payment_method enum ('CASH', 'QR_CODE')                         not null,
    payment_status enum ('CANCEL', 'COMPLETED', 'NOT_PAID', 'PAID') not null,
    total_amount   double                                           not null,
    table_id       bigint                                           null,
    dining_option  enum ('DINE_IN', 'TAKE_AWAY')                    not null,
    constraint FKmmd92suqcvbxa179f24rbvvvq
        foreign key (table_id) references tables (id)
);

create table disposed_products
(
    id            int auto_increment
        primary key,
    note          text                               null,
    staff_id      int                                null,
    date_disposed datetime default CURRENT_TIMESTAMP null,
    constraint disposed_products_ibfk_2
        foreign key (staff_id) references users (id)
);

create table bill_details
(
    id               bigint auto_increment
        primary key,
    price            double not null,
    quantity         int    not null,
    bill_id          bigint not null,
    product_batch_id int    not null,
    constraint FKci263uj9w3o67sa2n51tle8dy
        foreign key (product_batch_id) references product_batches (id),
    constraint FKfwm4sko9p82ndh6belyxx12bj
        foreign key (bill_id) references bills (id)
);


create table bill_status_history
(
    id                bigint auto_increment
        primary key,
    new_status        enum ('CANCEL', 'COMPLETED', 'NOT_PAID', 'PAID') not null,
    old_status        enum ('CANCEL', 'COMPLETED', 'NOT_PAID', 'PAID') not null,
    updated_at        datetime(6)                                      not null,
    bill_id           bigint                                           not null,
    updated_by        int                                              not null,
    updated_by_system bit                                              null,
    constraint FKcjpmq5cgbc2j2blebofi3r90a
        foreign key (updated_by) references users (id),
    constraint FKiu3titcab1j0uglyura4dk26s
        foreign key (bill_id) references bills (id)
);

create table promotions
(
    id          int auto_increment
        primary key,
    name        varchar(100) not null,
    description varchar(250) not null,
    start_date  datetime     not null,
    end_date    datetime     not null,
    isactive    tinyint(1)   null,
    created_at  datetime     null,
    updated_at  datetime     null,
    discount    int          not null,
    check ((`discount` > 0) and (`discount` < 100))
);



create table promotion_details
(
    promotion_id     int null,
    product_batch_id int null,
    constraint promotion_details_ibfk_1
        foreign key (promotion_id) references promotions (id),
    constraint promotion_details_ibfk_2
        foreign key (product_batch_id) references product_batches (id)
);

create index product_batch_id
    on promotion_details (product_batch_id);

create index promotion_id
    on promotion_details (promotion_id);


create table daily_discounts
(
    id               int auto_increment
        primary key,
    product_batch_id int  not null,
    discount         int  not null,
    start_date       date not null,
    end_date         date not null,
    constraint daily_discounts_ibfk_1
        foreign key (product_batch_id) references product_batches (id)
);

create index product_batch_id
    on daily_discounts (product_batch_id);

create table product_histories
(
    id             int auto_increment
        primary key,
    product_id     int                       not null,
    price          double                    not null,
    effective_date timestamp default (now()) null,
    constraint product_histories_ibfk_1
        foreign key (product_id) references products (id)
);

create index idx_product_histories_product_date
    on product_histories (product_id asc, effective_date desc);

create table supplier
(
    id     int         not null
        primary key,
    name   varchar(50) not null,
    number varchar(15) null
)
    collate = utf8mb4_general_ci;

create table import_ingredients
(
    id           int auto_increment
        primary key,
    user_id      int      null,
    import_date  datetime null,
    total_amount double   null,
    created_at   datetime null,
    updated_at   datetime null,
    id_supplier  int      null,
    constraint fk_supplier
        foreign key (id_supplier) references supplier (id)
            on delete set null,
    constraint import_ingredients_ibfk_1
        foreign key (user_id) references users (id)
)
    collate = utf8mb4_general_ci;

create index user_id
    on import_ingredients (user_id);

create table import_ingredient_details
(
    import_ingredient_id int    null,
    ingredient_id        int    null,
    quantity             double null,
    price                double null,
    constraint import_ingredient_details_ibfk_1
        foreign key (import_ingredient_id) references import_ingredients (id),
    constraint import_ingredient_details_ibfk_2
        foreign key (ingredient_id) references ingredients (id)
)
    collate = utf8mb4_general_ci;

create index import_ingredient_id
    on import_ingredient_details (import_ingredient_id);

create index ingredient_id
    on import_ingredient_details (ingredient_id);

create table export_ingredients
(
    id                  int auto_increment
        primary key,
    sender_id           int      null,
    daily_production_id int      null,
    export_date         datetime null,
    total_amount        double   null,
    created_at          datetime null,
    constraint export_ingredients_ibfk_1
        foreign key (sender_id) references users (id)
)
    collate = utf8mb4_general_ci;

create index sender_id
    on export_ingredients (sender_id);


create table export_ingredient_details
(
    export_ingredient_id int    null,
    ingredient_id        int    null,
    quantity             double null,
    constraint fk_exportdetail_dexport
        foreign key (export_ingredient_id) references export_ingredients (id),
    constraint fk_exportdetail_ingredient
        foreign key (ingredient_id) references ingredients (id)
)
    collate = utf8mb4_general_ci;


create table disposed_product_details
(
    id                  int auto_increment
        primary key,
    disposed_product_id int not null,
    product_batch_id    int not null,
    disposed_quantity   int not null,
    constraint disposed_product_details_ibfk_1
        foreign key (disposed_product_id) references disposed_products (id),
    constraint disposed_product_details_ibfk_2
        foreign key (product_batch_id) references product_batches (id)
);